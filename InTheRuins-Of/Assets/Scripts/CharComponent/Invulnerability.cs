using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Events;

[RequireComponent(typeof(HP))]
public class Invulnerability : MonoBehaviour {

  [SerializeField] protected bool _invulnerable;
  public bool invulnerable { get => _invulnerable; protected set => _invulnerable = value; }

  public bool prevInvul { get; protected set; }

  [HideInInspector]
  public HP hp;

  public static implicit operator bool(Invulnerability i) => i != null && i._invulnerable;

  [Tooltip("Invoked in LateUpdate if invulnerability was gained")]
  public UnityEvent onGainInvulnerability;

  [Tooltip("Invoked in LateUpdate if invulnerability was lost")]
  public UnityEvent onLoseInvulnerability;


  void Start() {
    hp = GetComponent<HP>();
    prevInvul = _invulnerable;
  }

  void LateUpdate() {
    if (prevInvul == invulnerable) return;

    if (invulnerable) onGainInvulnerability.Invoke();
    else onLoseInvulnerability.Invoke();
    prevInvul = invulnerable;
  }

}
